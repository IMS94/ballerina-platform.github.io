{
  "modules": [
    {
      "id": "docker",
      "description": "\u003cp\u003eThis module offers an annotation based docker extension implementation for Ballerina.\u003c/p\u003e",
      "orgName": "ballerina",
      "version": "1.0.0"
    }
  ],
  "classes": [],
  "functions": [],
  "records": [
    {
      "id": "DockerConfiguration",
      "description": "\u003cp\u003eDocker annotation configuration.\u003c/p\u003e",
      "moduleId": "docker",
      "moduleOrgName": "ballerina",
      "moduleVersion": "1.0.0"
    },
    {
      "id": "FileConfig",
      "description": "\u003cp\u003eExternal file type for docker.\u003c/p\u003e",
      "moduleId": "docker",
      "moduleOrgName": "ballerina",
      "moduleVersion": "1.0.0"
    },
    {
      "id": "FileConfigs",
      "description": "\u003cp\u003eExternal File configurations for docker.\u003c/p\u003e",
      "moduleId": "docker",
      "moduleOrgName": "ballerina",
      "moduleVersion": "1.0.0"
    },
    {
      "id": "ExposeConfig",
      "description": "\u003cp\u003eExpose ports for docker.\u003c/p\u003e",
      "moduleId": "docker",
      "moduleOrgName": "ballerina",
      "moduleVersion": "1.0.0"
    }
  ],
  "constants": [],
  "errors": [],
  "types": [],
  "clients": [],
  "listeners": [],
  "annotations": [
    {
      "id": "Config",
      "description": "\u003cp\u003e@docker:Config annotation to configure docker artifact generation.\u003c/p\u003e",
      "moduleId": "docker",
      "moduleOrgName": "ballerina",
      "moduleVersion": "1.0.0"
    },
    {
      "id": "CopyFiles",
      "description": "\u003cp\u003e@docker:CopyFile annotation to copy external files to docker image.\u003c/p\u003e",
      "moduleId": "docker",
      "moduleOrgName": "ballerina",
      "moduleVersion": "1.0.0"
    },
    {
      "id": "Expose",
      "description": "\u003cp\u003e@docker:Expose annotation to expose ballerina ports.\u003c/p\u003e",
      "moduleId": "docker",
      "moduleOrgName": "ballerina",
      "moduleVersion": "1.0.0"
    }
  ],
  "abstractObjects": []
}